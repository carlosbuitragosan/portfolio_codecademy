body {
  font-family: 'Roboto', sans-serif;
  box-sizing: border-box;
}

img {
  max-width: 100%;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  --grey: black;
  --bar-width: 40px;
  --bar-height: 4px;
  --bar-gap: 3px;
  --animation: 200ms ease-in-out;
  --burger-height: calc(var(--bar-height) * 3 + var(--bar-gap) * 2);
}

/* HEADER  */

.burger__menu {
  display: none;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2rem;
}
.header a {
  text-decoration: none;
  color: inherit;
}

.navbar {
  flex-basis: 50%;
}
.menu {
  display: flex;
  justify-content: flex-end;
  list-style-type: none;
  font-size: 1.2rem;
  margin: 0;
  padding: 0;
}

.menu__item {
  flex-grow: 1;
  text-align: center;
}

.logo {
  font-size: 1.8rem;
  font-weight: 900;
}

/* BURGER MENU */
@media only screen and (max-width: 500px) {
  .header {
    flex-direction: column;
  }

  .menu {
    flex-direction: column;
  }

  /* BURGER MENU ICON */
  .burger__menu {
    --x-width: calc(
      var(--burger-height) * 1.41421356237
    ); /* calculates the length of the lines when they become a cross (multiply by the square root of 2) */
    position: absolute;
    top: 32px;
    right: 30px;
    display: flex;
    flex-direction: column;
    gap: var(--bar-gap);
    cursor: pointer;
    padding: 0.5rem;
  }

  .burger__menu input, /* checkbox. middle line */
  .burger__menu::before, /* top line */
  .burger__menu::after {
    /* bottom line */
    content: '';
    width: var(--bar-width);
    height: var(--bar-height);
    border-radius: 18px;
    background: var(--grey);
    transition:
      opacity var(--animation),
      /* transition for opacity, width, length and rotate */ width
        var(--animation),
      rotate var(--animation),
      translate var(--animation);
    transform-origin: left; /* the axis where the lines rotate are now on the left */
  }

  .burger__menu input {
    appearance: none; /* removes checkbox appareance and takes the above settings (widht, length) */
    pointer-events: none; /* disable click on the checkbox so that the click is handled by the b_menu */
  }

  .burger__menu:has(input:checked)::before {
    rotate: 45deg; /*rotates the top line downwards */
    width: var(
      --x-width
    ); /*sets the new length of the line when it becomes a cross */
    translate: 0 calc(var(--bar-height) / -2); /*moves the axis slightly up */
  }

  .burger__menu:has(input:checked)::after {
    rotate: -45deg; /* rotates the bottom line upwards */
    width: var(
      --x-width
    ); /*sets the new length of the line when it becomes a cross */
    translate: 0 calc(var(--bar-height) / 2); /*moves the axis slightly down */
  }

  .burger__menu input:checked {
    /* removes the middle line */
    opacity: 0;
    width: 0;
  }

  /* NAVBAR TRANSITION FROM HIDDEN TO VISIBLE */
  .navbar {
    position: absolute;
    top: 80px;
    transform: translateY(-150px);
    opacity: 0;
    /* transition:
      opacity 0.4s ease-in-out,
      transform 0.4s ease-in-out; */
  }

  /* Keyframes for sliding down with opacity change after transform */
  @keyframes slideDown {
    0% {
      transform: translateY(-150px);
      opacity: 0;
    }
    50% {
      transform: translateY(-75px);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }

  /* Keyframes for sliding up with opacity change first */
  @keyframes slideUp {
    0% {
      transform: translateY(0);
      opacity: 1;
    }
    50% {
      transform: translateY(-50px);
      opacity: 0;
    }
    100% {
      transform: translateY(-150px);
      opacity: 0;
    }
  }

  /* Apply animation for the show state */
  .navbar.show {
    animation: slideDown 0.4s forwards;
  }

  /* Apply animation for the hide state */
  .navbar.hide {
    animation: slideUp 0.5s forwards;
  }
}
